[{"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/index.js":"1","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/App.js":"2","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/interact.js":"3","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/connect.js":"4"},{"size":219,"mtime":1656119755935,"results":"5","hashOfConfig":"6"},{"size":4977,"mtime":1656164515435,"results":"7","hashOfConfig":"6"},{"size":1852,"mtime":1656165316534,"results":"8","hashOfConfig":"6"},{"size":619,"mtime":1656119755936,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1xjhxvp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/index.js",[],["20","21"],"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/App.js",["22","23","24","25","26","27"],"import \"./App.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { add, getValue, multiply, update } from \"./library/interact\";\nimport { connectWalletBeacon, setup } from \"./library/connect\";\n\nconst App = () => {\n  const [Tezos, setTezos] = useState(undefined);\n  const [status, setStatus] = useState(\"No Operations Performed\");\n  const [value, setValue] = useState(0);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    console.log(\"run\");\n    setup().then(setTezos).catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    if (Tezos === undefined) return;\n    getValue(Tezos)\n      .then(setValue)\n      .then(() => setLoader(false))\n      .catch(console.error);\n    const timer = setInterval(() => {\n      getValue(Tezos).then(setValue).catch(console.error);\n    }, 60000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [Tezos]);\n\n  const handleEvent = async (e, func, params) => {\n    e.preventDefault();\n    try {\n      const wal = await connectWalletBeacon();\n      Tezos.setWalletProvider(wal);\n      setLoader(true);\n      await func(Tezos, params, setStatus);\n      await getValue(Tezos)\n        .then(setValue)\n        .then(() => setLoader(false));\n    } catch (err) {\n      console.error(err);\n      alert(\"Couldn't connect wallet\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Get Insured with Chain</h1>\n      {/* {!loader && <div className=\"value\">{value}</div>}\n      {loader && <Loader />} */}\n      <p>Current Value in Storage</p>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, update,\n        {\n            time:e.target.time.value,\n            aid : e.target.aid.value,\n            date: e.target.date.value,\n            Name_date:e.target.Name_date.value,\n            loo: e.target.loo.value,\n            qts:e.target.qts.value,\n            Aname:e.target.Aname.value,\n            APhoneNumber: e.target.APhoneNumber.value,\n            Mname: e.target.Mname.value,\n            qty:e.target.qty.value,\n            Quality:e.target.Quality.value,\n            comment:e.target.comment.value,\n        }\n            );\n        }}\n      >\n        <label>Phonenumber : </label>\n        <input type=\"number\" name=\"APhoneNumber\" step=\"1\" /><br></br>\n        <label>Name : </label>\n        <input type=\"text\" name=\"Aname\" step=\"1\" /><br></br>\n        <label>Mineral Name : </label>\n        <input type=\"text\" name=\"Mname\" step=\"1\" /><br></br>\n        <label>Name Date : </label>\n        <input type=\"text\" name=\"Name_date\" step=\"1\" /><br></br>\n        <label>Quality : </label>\n        <input type=\"text\" name=\"Quality\" step=\"1\" /><br></br>\n        <label>Aadhar : </label>\n        <input type=\"number\" name=\"aid\" step=\"1\" /><br></br>\n        <label>Comment : </label>\n        <input type=\"text\" name=\"comment\" step=\"1\" /><br></br>\n        <label>Date : </label>\n        <input type=\"text\" name=\"date\" step=\"1\" /><br></br>\n        <label>Location : </label>\n        <input type=\"text\" name=\"loo\" step=\"1\" /><br></br>\n        <label>Result : </label>\n        <input type=\"text\" name=\"qts\" step=\"1\" /><br></br>\n        <label>Quantity : </label>\n        <input type=\"text\" name=\"qty\" step=\"1\" /><br></br>\n        <label>Time : </label>\n        <input type=\"text\" name=\"time\" step=\"1\" /><br></br>\n        <input type=\"submit\" value=\"addResourcedata\" />\n      </form>\n      {/* <form\n        onSubmit={async (e) => {\n          await handleEvent(e, multiply, e.target.mul.value);\n        }}\n      >\n        <label>Multiply : </label>\n        <input type=\"number\" name=\"mul\" step=\"1\" />\n        <input type=\"submit\" value=\"Multiply\" />\n      </form>\n      <form\n        onSubmit={async (e) => {\n          await handleEvent(e, add, {\n            a: e.target.a.value,\n            b: e.target.b.value,\n          });\n        }}\n      >\n        <label>Add : </label>\n        <input type=\"number\" name=\"a\" step=\"1\" />\n        <input type=\"number\" name=\"b\" step=\"1\" />\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n      <p dangerouslySetInnerHTML={{ __html: \"Tx Status : \" + status }}></p> */}\n    </div>\n  );\n};\n\nconst Loader = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      style={{\n        margin: \"auto\",\n        display: \"block\",\n        marginTop: \"3vw\",\n        marginBottom: \"-1vw\",\n      }}\n      width=\"3vw\"\n      height=\"3vw\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        fill=\"none\"\n        stroke=\"#0a0a0a\"\n        strokeWidth=\"10\"\n        r=\"35\"\n        strokeDasharray=\"164.93361431346415 56.97787143782138\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          values=\"0 50 50;360 50 50\"\n          keyTimes=\"0;1\"\n        ></animateTransform>\n      </circle>\n    </svg>\n  );\n};\n\nexport default App;\n","/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/interact.js",[],"/Users/yuvrajsinghdeora/Documents/Learnings/tezos-workshop/client/src/library/connect.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":10,"nodeType":"34","messageId":"35","endLine":4,"endColumn":13},{"ruleId":"32","severity":1,"message":"36","line":4,"column":25,"nodeType":"34","messageId":"35","endLine":4,"endColumn":33},{"ruleId":"32","severity":1,"message":"37","line":9,"column":10,"nodeType":"34","messageId":"35","endLine":9,"endColumn":16},{"ruleId":"32","severity":1,"message":"38","line":10,"column":10,"nodeType":"34","messageId":"35","endLine":10,"endColumn":15},{"ruleId":"32","severity":1,"message":"39","line":11,"column":10,"nodeType":"34","messageId":"35","endLine":11,"endColumn":16},{"ruleId":"32","severity":1,"message":"40","line":128,"column":7,"nodeType":"34","messageId":"35","endLine":128,"endColumn":13},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'add' is defined but never used.","Identifier","unusedVar","'multiply' is defined but never used.","'status' is assigned a value but never used.","'value' is assigned a value but never used.","'loader' is assigned a value but never used.","'Loader' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]